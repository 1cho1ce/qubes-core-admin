#!/usr/bin/python3
#
# The Qubes OS Project, https://www.qubes-os.org/
#
# Copyright (C) 2017  Marek Marczykowski-GÃ³recki
#                                       <marmarek@invisiblethingslab.com>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, see <https://www.gnu.org/licenses/>.
#

import qubesadmin
import os
import subprocess
import sys

def main(argv):
    args = len(sys.argv)
    if not (1 <= args <= 2):
        print("wrong number of arguments, must have at most 1", file=sys.stderr)
        sys.exit(1)
    if args >= 2:
        arg = "+nanoseconds" if sys.argv[1] else ""
    else:
        arg = ""
    app = qubesadmin.Qubes()

    clockvm = app.clockvm
    if clockvm is None:
        return

    if clockvm.klass == 'AdminVM' or not clockvm.is_running():
        env = {**os.environ, "LC_ALL": "C"}
        # print dom0 time if clockvm is dom0 or is not running
        date_arg = "-Ins" if arg else "-Iseconds"
        os.execve("/usr/bin/date", ("date", "-u", date_arg), env)
    else:
        # passthrough request to the clockvm
        p = clockvm.run_service("qubes.GetDate" + arg, stdout=None, stdin=subprocess.DEVNULL)
        p.wait()

if __name__ == '__main__':
    main(sys.argv)
